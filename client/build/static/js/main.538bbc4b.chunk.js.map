{"version":3,"sources":["static/logo","static/audio/correct.mp3","static/audio/wrong.mp3","static/audio/Short Sms Tone.mp3","static/audio/1 Second Tone.mp3","static/audio/notify.mp3","pages/home.js","components/logo.js","components/statistics.js","utils/alphabets.js","components/sound.js","utils/axios.js","pages/game.js","pages/leaderboard.js","routes.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","to","Component","Logo","src","logo","alt","Statistics","level","score","multiplier","small","big","Sound","right","left","leveled","multiplied","end","useSound","correctKeySound","playCorrect","wrongKeySound","playWrong","levelUpSound","levelingUp","multiplierSound","multiplierChange","gameOverSound","gameOver","useEffect","axios","create","baseURL","process","REACT_APP_BASE_URL","props","startTimer","console","log","state","timer","words","intervalPointer","setInterval","removeWord","shift","setState","filter","word","input","updateWords","levels","setTimeout","window","alert","setWords","start","stopTimer","clearInterval","e","logKey","key","onKeyPress","button","showPressedKey","alphabets","includes","document","querySelectorAll","forEach","element","classList","remove","querySelector","add","onChange","restart","onChangeInput","value","target","length","letter","toUpperCase","upper","substr","newWords","keyboard","setInput","leves","loading","this","addEventListener","removeEventListener","get","then","res","data","onClick","style","color","width","slice","map","i","placeholder","autoFocus","keyboardRef","r","layoutName","layout","default","users","name","LeaderBoard","user","Routes","exact","path","component","Home","Game","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.538bbc4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9ed23240.bin\";","module.exports = __webpack_public_path__ + \"static/media/correct.a8f5d622.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrong.8839dabc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Short Sms Tone.3a27c93c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1 Second Tone.c6d00827.mp3\";","module.exports = __webpack_public_path__ + \"static/media/notify.2c654e74.mp3\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <h1>Welcome to QWERTY QUIZ</h1>\n          <div className={'instructions'}>\n            <h3>Instructions</h3>\n            <ul>\n              <li>Type as fast as you can while trying to avoid mistakes</li>\n            </ul>\n          </div>\n\n          <Link to='/game'>\n            <button>Start</button>\n          </Link>\n        </header>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport logo from '../static/logo';\n\nexport default function Logo() {\n  return (\n    <div className='logo'>\n      <img src={logo} className='logo-img' alt='logo' /> Thinkerbell Labs\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Statistics({ level, score, multiplier }) {\n  return (\n    <div className='statistics'>\n      <div className={'level-m'}>\n        <h5 className='level'>Level: {level} </h5>\n        <h5 className='multiplier'>Multiplier x{multiplier} </h5>\n      </div>\n\n      <h3 className='score'>Score: {score}</h3>\n    </div>\n  );\n}\n","export default {\n  small: [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n  ],\n  big: [\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n  ],\n};\n","import React, { useEffect } from 'react';\nimport useSound from 'use-sound';\nimport correctKeySound from '../static/audio/correct.mp3';\nimport wrongKeySound from '../static/audio/wrong.mp3';\nimport levelUpSound from '../static/audio/Short Sms Tone.mp3';\nimport multiplierSound from '../static/audio/1 Second Tone.mp3';\nimport gameOverSound from '../static/audio/notify.mp3';\n\nconst Sound = ({ right, left, leveled, multiplied, end }) => {\n  const [playCorrect] = useSound(correctKeySound);\n  const [playWrong] = useSound(wrongKeySound);\n  const [levelingUp] = useSound(levelUpSound);\n  const [multiplierChange] = useSound(multiplierSound);\n  const [gameOver] = useSound(gameOverSound);\n\n  useEffect(() => {\n    if (right) playCorrect();\n    if (left) playWrong();\n    if (leveled) levelingUp();\n    if (multiplied) multiplierChange();\n    if (end) gameOver();\n  }, [\n    right,\n    playCorrect,\n    playWrong,\n    left,\n    leveled,\n    end,\n    gameOver,\n    multiplierChange,\n    levelingUp,\n    multiplied,\n  ]);\n\n  return <div></div>;\n};\nexport default Sound;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL || 'http://localhost:8080/',\n});\n","import React, { Component } from 'react';\nimport Keyboard from 'react-simple-keyboard';\nimport 'react-simple-keyboard/build/css/index.css';\nimport Logo from '../components/logo';\nimport Stats from '../components/statistics';\nimport alphabets from '../utils/alphabets';\nimport Sound from '../components/sound';\nimport axios from '../utils/axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leves: null,\n      words: [''],\n      input: '',\n      multiplier: 1,\n      score: 0,\n      level: 1,\n      timer: 2500,\n      left: false,\n      right: false,\n      multiplied: false,\n      leveled: false,\n      gameOver: false,\n      loading: false,\n    };\n    this.intervalPointer = null;\n  }\n  startTimer = () => {\n    console.log('Timer Started');\n    const { level, words, timer } = this.state;\n    this.intervalPointer = setInterval(() => {\n      console.log('before', this.state.words);\n      console.log('Before Timer', this.state.timer);\n\n      const removeWord = this.state.words.shift();\n      this.setState({\n        timer: timer - 500,\n        words: this.state.words.filter((word) => word !== removeWord),\n        input: '',\n        multiplier: 1,\n      });\n\n      console.log('After', this.state.words);\n      console.log('After Timer', this.state.timer);\n    }, timer);\n  };\n  updateWords = () => {\n    const { level, words, timer, score, levels } = this.state;\n    if (level === 3) {\n      this.setState({ gameOver: true }, () => {\n        console.log('Game Over');\n      });\n      setTimeout(() => {\n        window.alert(`Game Over\\n score:${score}`);\n      }, 1000);\n    } else {\n      if (score === 0) {\n        this.setState({ gameOver: true }, () => {\n          console.log('Game Over');\n        });\n        setTimeout(() => {\n          window.alert(`Game Over\\n score:${score}`);\n        }, 1000);\n      } else {\n        this.setState({ level: level + 1, words: levels[level + 1] }, () => {\n          this.startTimer();\n        });\n        this.setState({ leveled: true }, () => {\n          this.setState({ leveled: false });\n        });\n      }\n    }\n  };\n  setWords = () => {\n    const { level, words, timer, levels } = this.state;\n    this.setState({ words: levels[level] });\n  };\n\n  start = () => {\n    this.setWords();\n    this.startTimer();\n  };\n\n  stopTimer = () => {\n    console.log('Timer Stopped');\n    clearInterval(this.intervalPointer);\n  };\n\n  log = (e) => console.log(e);\n  logKey = (e) => {\n    console.log(e.key);\n  };\n\n  componentDidUpdate() {\n    const { words, level, gameOver } = this.state;\n    if (words.length === 0) {\n      console.log('No more words');\n      if (!gameOver) this.updateWords();\n      this.stopTimer();\n    }\n\n    document.addEventListener('keypress', this.logKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.log);\n    clearInterval(this.intervalPointer);\n  }\n\n  onKeyPress = (button) => {\n    console.log('Button pressed', button);\n    this.showPressedKey(button);\n  };\n\n  showPressedKey = (button) => {\n    if (alphabets.big.includes(button)) {\n      const key = `[data-skbtn='${button}']`;\n      document\n        .querySelectorAll('.hg-standardBtn')\n        .forEach((element) => element.classList.remove('clicked'));\n      document.querySelector(key).classList.add('clicked');\n    }\n  };\n  onChange = (key) => {\n    this.setState({ input: key });\n    console.log('Input changed', key);\n  };\n  restart = () => {\n    this.stopTimer();\n    this.setState(\n      {\n        words: [''],\n        input: '',\n        multiplier: 1,\n        score: 0,\n        level: 1,\n        timer: 2500,\n        gameOver: false,\n      },\n      () => {\n        console.log(this.state.words);\n        this.start();\n      }\n    );\n    // this.intervalPointer = null;\n  };\n  componentDidMount() {\n    axios.get('levels').then((res) => {\n      console.log(res);\n      this.setState({ levels: res.data });\n    });\n  }\n  onChangeInput = ({ target: { value } }) => {\n    // this.setState({ left: false, right: false });\n    const { input, level, words, multiplier, score } = this.state;\n    console.log(value);\n    if (value && words[0]) {\n      const length = value.length;\n      const letter = value[length - 1].toUpperCase();\n      const upper = value.toUpperCase();\n      console.log(letter);\n\n      if (alphabets.big.includes(letter)) {\n        this.showPressedKey(letter);\n      }\n      this.setState({ input: upper });\n      if (upper === words[0].substr(0, length)) {\n        console.log('Still Correct');\n        this.setState({ right: true }, () => {\n          this.setState({ right: false });\n        });\n      } else {\n        this.setState({ multiplier: 1 });\n        this.setState({ left: true }, () => {\n          this.setState({ left: false });\n        });\n        console.log('Error made');\n      }\n\n      if (upper === words[0]) {\n        this.stopTimer();\n        console.log('Filtering');\n        this.setState({ score: score + level * 10 * multiplier });\n\n        this.setState({ multiplier: multiplier + 1 });\n        this.setState({ multiplied: true }, () => {\n          this.setState({ multiplied: false });\n        });\n        const newWords = words.filter((word) => word !== upper);\n        this.setState({ words: newWords });\n        this.setState({ input: '' });\n        console.log(input);\n        this.startTimer();\n      }\n\n      this.keyboard.setInput(value);\n    } else this.setState({ input: value });\n  };\n  render() {\n    const {\n      input,\n      level,\n      words,\n      multiplier,\n      score,\n      left,\n      right,\n      leveled,\n      multiplied,\n      gameOver,\n    } = this.state;\n    return (\n      <div className='App'>\n        <Sound\n          left={left}\n          right={right}\n          leveled={leveled}\n          multiplied={multiplied}\n          end={gameOver}\n        />\n        <header className='App-header'>\n          <Logo />\n          <div>\n            <button onClick={this.start}>Start</button>{' '}\n            <button onClick={this.restart}>Restart</button>\n          </div>\n\n          <Stats level={level} multiplier={multiplier} score={score} />\n          <div style={{ color: 'black', width: '80%' }}>\n            <div className='slide'>\n              {words\n                ? words.slice(0, 1).map((word, i) => (\n                    <h4 key={i}>\n                      {word} <span>{i + 1}</span>\n                    </h4>\n                  ))\n                : null}\n            </div>\n            <input\n              value={input}\n              placeholder={'Tap'}\n              onChange={this.onChangeInput}\n              autoFocus\n            />\n            <Keyboard\n              keyboardRef={(r) => (this.keyboard = r)}\n              layoutName={'default'}\n              onChange={this.onChange}\n              onKeyPress={this.onKeyPress}\n              layout={{\n                default: [\n                  'Q W E R T Y U I O P',\n                  ' A S D F G H J K L ',\n                  ' Z X C V B N M ',\n                ],\n              }}\n            />\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React, { Component } from 'react';\nimport Leaderboard from 'react-leaderboard';\n\nconst users = [\n  { name: 'string', score: 10 },\n  { name: 'string', score: 10 },\n  { name: 'string', score: 12 },\n  { name: 'string', score: 44 },\n  { name: 'string', score: 55 },\n  { name: 'string', score: 14 },\n  { name: 'string', score: 63 },\n  { name: 'string', score: 53 },\n  { name: 'string', score: 33 },\n  { name: 'string', score: 88 },\n];\nconst LeaderBoard = () => {\n  return (\n    <div className='App'>\n      <div className='App-header'>\n        <h1>Leader Board</h1>\n        <table>\n          <tr>\n            <th>SN</th>\n            <th>Name</th>\n            <th>Score</th>\n          </tr>\n          {users.map((user, i) => (\n            <tr key={i}>\n              <td>{i + 1}</td>\n              <td>{user.name}</td>\n              <td>{user.score}</td>\n            </tr>\n          ))}\n        </table>\n      </div>\n    </div>\n  );\n};\nexport default LeaderBoard;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './pages/home';\nimport Game from './pages/game';\nimport LeaderBoard from './pages/leaderboard';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path='/' component={Home} />\n      <Route exact path='/game' component={Game} />\n      <Route exact path='/leaderboard' component={LeaderBoard} />\n    </Switch>\n  );\n};\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './routes';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Routes />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}