{"version":3,"sources":["static/logo","static/audio/correct.mp3","static/audio/wrong.mp3","static/audio/Short Sms Tone.mp3","static/audio/1 Second Tone.mp3","static/audio/notify.mp3","pages/home.js","components/logo.js","components/statistics.js","utils/alphabets.js","pages/game.js","components/sound.js","utils/axios.js","pages/leaderboard.js","routes.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","to","Component","Logo","src","logo","alt","Statistics","level","score","multiplier","wrongKey","small","big","Sound","right","left","leveled","multiplied","end","useSound","correctKeySound","playCorrect","wrongKeySound","playWrong","levelUpSound","levelingUp","multiplierSound","multiplierChange","gameOverSound","gameOver","useEffect","axios","create","baseURL","process","REACT_APP_QWERTY_QUIZ_BASE_URL","failed","props","startTimer","intervalPointer","setInterval","removeWord","state","words","shift","push","setState","filter","word","input","failedWords","timer","stopTimer","clearInterval","updateWords","levels","length","alert","start","log","e","console","logKey","showPressedKey","key","classList","remove","query","document","querySelectorAll","forEach","element","querySelector","add","showWrongKey","onChange","restart","onChangeInput","value","target","letter","toUpperCase","upper","alphabets","includes","substr","wrong","currentCorrect","currentCorrectLetter","newWords","keyboard","setInput","addEventListener","this","get","then","res","data","removeEventListener","onClick","style","color","width","map","i","slice","placeholder","autoFocus","keyboardRef","r","layoutName","onKeyPress","layout","default","LeaderBoard","useState","games","setGames","game","username","average_score","max_level","games_played","Routes","exact","path","component","Home","Game","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.115a226f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9ed23240.bin\";","module.exports = __webpack_public_path__ + \"static/media/correct.a8f5d622.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrong.8839dabc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Short Sms Tone.3a27c93c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1 Second Tone.c6d00827.mp3\";","module.exports = __webpack_public_path__ + \"static/media/notify.2c654e74.mp3\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <h1>Welcome to QWERTY QUIZ</h1>\n          <div className={'instructions'}>\n            <h3>Instructions</h3>\n            <ul>\n              <li>Type as fast as you can while trying to avoid mistakes</li>\n            </ul>\n          </div>\n\n          <Link to='/game'>\n            <button>Start</button>\n          </Link>\n        </header>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport logo from '../static/logo';\n\nexport default function Logo() {\n  return (\n    <div className='logo'>\n      <img src={logo} className='logo-img' alt='logo' /> Thinkerbell Labs\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Statistics({ level, score, multiplier }) {\n  return (\n    <div className='statistics'>\n      <div className={'level-m'}>\n        <h5 className='level'>Level: {level} </h5>\n        <h5 className='multiplier'>Multiplier x{multiplier} </h5>\n      </div>\n\n      <h3 className='score'>Score: {score}</h3>\n    </div>\n  );\n}\n","export default {\n  small: [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n  ],\n  big: [\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n  ],\n};\n","import React, { Component } from 'react';\nimport Keyboard from 'react-simple-keyboard';\nimport 'react-simple-keyboard/build/css/index.css';\nimport Logo from '../components/logo';\nimport Stats from '../components/statistics';\nimport alphabets from '../utils/alphabets';\nimport Sound from '../components/sound';\nimport axios from '../utils/axios';\n\nlet wrongKey;\nconst failed = [];\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      levels: null,\n      words: [],\n      failedWords: [],\n      input: '',\n      multiplier: 1,\n      score: 0,\n      level: 0,\n      timer: 10000,\n      wrong: false,\n      right: false,\n      multiplied: false,\n      leveled: false,\n      gameOver: false,\n    };\n    this.intervalPointer = null;\n  }\n\n  componentDidMount() {\n    document.addEventListener('keypress', this.logKey);\n    axios.get('api/words').then((res) => {\n      this.setState({ levels: res.data });\n    });\n  }\n\n  componentDidUpdate() {\n    const { words, gameOver, failedWords, score } = this.state;\n    console.log(failedWords.length);\n    if (failedWords.length > 3 && gameOver === false) {\n      this.setState({ gameOver: true }, () => {\n        this.stopTimer();\n        alert(`Game Over\\n score:${score}`);\n      });\n    } else if (words.length === 0 && score > 1 && gameOver === false) {\n      this.stopTimer();\n      this.updateWords();\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.log);\n    this.stopTimer();\n  }\n\n  startTimer = () => {\n    this.intervalPointer = setInterval(() => {\n      const removeWord = this.state.words.shift();\n      failed.push(removeWord);\n      this.setState({\n        words: this.state.words.filter((word) => word !== removeWord),\n        input: '',\n        failedWords: failed,\n      });\n      if (this.state.timer > 2000) {\n        this.setState({ timer: this.state.timer - 300 });\n      }\n    }, this.state.timer);\n  };\n\n  stopTimer = () => {\n    clearInterval(this.intervalPointer);\n  };\n\n  updateWords = () => {\n    const { level, score, levels, words } = this.state;\n    if (level === levels.length && words.length === 0) {\n      this.setState({ gameOver: true }, () => {\n        this.stopTimer();\n        alert(`Game Over\\n score:${score}`);\n      });\n    } else {\n      this.setState({ level: level + 1, leveled: true }, () => {\n        this.setState({ leveled: false, words: levels[level].words });\n        this.startTimer();\n      });\n    }\n  };\n\n  start = () => {\n    const { level, levels } = this.state;\n    if (levels.length > 0) {\n      this.setState({ level: level + 1, words: levels[level].words });\n      this.startTimer();\n    } else {\n      alert(\"There's no word in the database\");\n    }\n  };\n\n  log = (e) => console.log(e);\n  logKey = (e) => {\n    console.log(e);\n  };\n\n  showPressedKey = (key) => {\n    if (wrongKey) wrongKey.classList.remove('wrong');\n    const query = `[data-skbtn='${key}']`;\n    document\n      .querySelectorAll('.hg-standardBtn')\n      .forEach((element) => element.classList.remove('clicked'));\n    document.querySelector(query).classList.add('clicked');\n  };\n\n  showWrongKey = (key) => {\n    console.log(key);\n    const query = `[data-skbtn='${key}']`;\n    wrongKey = document.querySelector(query);\n    document\n      .querySelectorAll('.hg-standardBtn')\n      .forEach((element) => element.classList.remove('wrong'));\n    document.querySelector(query).classList.add('wrong');\n  };\n\n  onChange = (key) => {\n    this.setState({ input: key });\n  };\n\n  restart = () => {\n    const { levels, level } = this.state;\n    this.stopTimer();\n    this.setState(\n      {\n        multiplier: 1,\n        score: 0,\n        level: 1,\n        timer: 10000,\n      },\n      () => {\n        this.start();\n      }\n    );\n  };\n\n  onChangeInput = ({ target: { value } }) => {\n    const { level, words, multiplier, score } = this.state;\n    if (value && words[0]) {\n      const length = value.length;\n      const letter = value[length - 1].toUpperCase();\n      const upper = value.toUpperCase();\n\n      if (\n        alphabets.big.includes(letter) &&\n        upper === words[0].substr(0, length)\n      ) {\n        this.showPressedKey(letter);\n        this.setState({ input: upper, right: true }, () => {\n          this.setState({ right: false });\n        });\n      } else if (alphabets.big.includes(letter)) {\n        this.setState({ multiplier: 1, wrong: true }, () => {\n          this.setState({ wrong: false });\n        });\n        const currentCorrect = words[0].substr(0, length);\n        const currentCorrectLetter = currentCorrect[currentCorrect.length - 1];\n        this.showPressedKey(currentCorrectLetter);\n        this.showWrongKey(letter);\n      }\n      if (upper === words[0]) {\n        this.stopTimer();\n        this.setState(\n          {\n            score: score + level * 10 * multiplier,\n            multiplier: multiplier + 1,\n            multiplied: true,\n          },\n          () => {\n            this.setState({ multiplied: false });\n          }\n        );\n        const newWords = words.filter((word) => word !== upper);\n        this.setState({ words: newWords, input: '' });\n        this.startTimer();\n      }\n      this.keyboard.setInput(value);\n    } else this.setState({ input: value });\n  };\n  render() {\n    const {\n      input,\n      level,\n      words,\n      multiplier,\n      score,\n      wrong,\n      right,\n      leveled,\n      multiplied,\n      gameOver,\n      failedWords,\n    } = this.state;\n    return (\n      <div className='App'>\n        <Sound\n          left={wrong}\n          right={right}\n          leveled={leveled}\n          multiplied={multiplied}\n          end={gameOver}\n        />\n        <section className='App-header'>\n          <Logo />\n          <div>\n            <button onClick={this.start}>Start</button>\n            <button onClick={this.restart}>Restart</button>\n          </div>\n\n          <Stats level={level} multiplier={multiplier} score={score} />\n          <div style={{ color: 'black', width: '80%' }}>\n            <div className='slide'>\n              {failedWords.length > 0\n                ? failedWords.map((word, i) => (\n                    <h4 key={i}>\n                      {word} <span>{i + 1}</span>\n                    </h4>\n                  ))\n                : null}\n\n              {words.length > 0\n                ? words.slice(0, 1).map((word, i) => <h4 key={i}>{word}</h4>)\n                : null}\n            </div>\n            <input\n              value={input}\n              placeholder={'Tap'}\n              onChange={this.onChangeInput}\n              autoFocus\n            />\n            <Keyboard\n              keyboardRef={(r) => (this.keyboard = r)}\n              layoutName={'default'}\n              onChange={this.onChange}\n              onKeyPress={this.showPressedKey}\n              layout={{\n                default: [\n                  'Q W E R T Y U I O P',\n                  ' A S D F G H J K L ',\n                  ' Z X C V B N M ',\n                ],\n              }}\n            />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React, { useEffect } from 'react';\nimport useSound from 'use-sound';\nimport correctKeySound from '../static/audio/correct.mp3';\nimport wrongKeySound from '../static/audio/wrong.mp3';\nimport levelUpSound from '../static/audio/Short Sms Tone.mp3';\nimport multiplierSound from '../static/audio/1 Second Tone.mp3';\nimport gameOverSound from '../static/audio/notify.mp3';\n\nconst Sound = ({ right, left, leveled, multiplied, end }) => {\n  const [playCorrect] = useSound(correctKeySound);\n  const [playWrong] = useSound(wrongKeySound);\n  const [levelingUp] = useSound(levelUpSound);\n  const [multiplierChange] = useSound(multiplierSound);\n  const [gameOver] = useSound(gameOverSound);\n\n  useEffect(() => {\n    if (right) playCorrect();\n    if (left) playWrong();\n    if (leveled) levelingUp();\n    if (multiplied) multiplierChange();\n    if (end) gameOver();\n  }, [\n    right,\n    playCorrect,\n    playWrong,\n    left,\n    leveled,\n    end,\n    gameOver,\n    multiplierChange,\n    levelingUp,\n    multiplied,\n  ]);\n\n  return <div></div>;\n};\nexport default Sound;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL:\n    process.env.REACT_APP_QWERTY_QUIZ_BASE_URL || 'http://localhost:3333/',\n});\n","import React, { useEffect, useState } from 'react';\nimport axios from '../utils/axios';\n\nconst LeaderBoard = () => {\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    axios.get('api/games').then((res) => {\n      setGames(res.data);\n    });\n    console.log('edited');\n  }, []);\n  return (\n    <div className='App'>\n      <div className='App-header'>\n        <h1>Leader Board</h1>\n        <table className='leaderboard'>\n          <thead>\n            <tr>\n              <th>SN</th>\n              <th>Username</th>\n              <th>Average Score</th>\n              <th>Max Level</th>\n              <th>Games Played</th>\n            </tr>\n          </thead>\n          <tbody>\n            {games.length > 0\n              ? games.map((game, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{game.username}</td>\n                    <td>{game.average_score}</td>\n                    <td>{game.max_level}</td>\n                    <td>{game.games_played}</td>\n                  </tr>\n                ))\n              : null}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\nexport default LeaderBoard;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './pages/home';\nimport Game from './pages/game';\nimport LeaderBoard from './pages/leaderboard';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path='/' component={Home} />\n      <Route exact path='/game' component={Game} />\n      <Route exact path='/leaderboard' component={LeaderBoard} />\n    </Switch>\n  );\n};\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './routes';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Routes />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}